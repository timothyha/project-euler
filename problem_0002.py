# https://projecteuler.net/problem=2
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be: 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

def fib(n):
	a = 1
	b = 2
	c = 3
	for i in range(3,n):
		a = b
		b = c
		c = a+b
	return c

# some reasoning	
# all even-valued will have index 3*k + 2, for example, 2, 8, 34, ...

result = 2

for n in range(1,1000000):

	fibo = fib(3*n+2)

# we could also put the whole loop here and NOT call fib(n)
# but fib(n) implementation is good enough to be saved in this code

	if fibo < 4000000:
		result = result + fibo
	else:
		break

print result # 4613732
